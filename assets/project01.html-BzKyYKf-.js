import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as n,a as i}from"./app-C0DPHvtI.js";const a={},r=i('<h2 id="creer-une-application-client-serveur-qui-interagit-avec-un-smart-contract-deploye-sur-la-blockchain" tabindex="-1"><a class="header-anchor" href="#creer-une-application-client-serveur-qui-interagit-avec-un-smart-contract-deploye-sur-la-blockchain"><span>Créer une application client/serveur qui intéragit avec un smart contract déployé sur la blockchain.</span></a></h2><p>Le projet est disponible <a href="/projects/01_blockchain.pdf">ICI</a></p><h2 id="participants-au-projet" tabindex="-1"><a class="header-anchor" href="#participants-au-projet"><span>Participants au projet</span></a></h2><table><thead><tr><th>Identifiant</th><th>Nom</th></tr></thead><tbody><tr><td>TH020</td><td>LEYENOHIN MICHEE CEPHAS</td></tr><tr><td>TH031</td><td>Hayicou Delphine</td></tr><tr><td>TH042</td><td>MOUHI CHRIST-EMMANUEL</td></tr><tr><td>TH059</td><td>BAKAYOKO ISMAEL AZIZ</td></tr><tr><td>TH096</td><td>Kouamé konan Abraham</td></tr></tbody></table><h2 id="definition-des-exigences-fonctionnelles" tabindex="-1"><a class="header-anchor" href="#definition-des-exigences-fonctionnelles"><span>Définition des exigences fonctionnelles</span></a></h2><p>Identifiez les fonctionnalités nécessaires pour interagir avec le smart contract :</p><ul><li>Lecture des données du smart contract (lecture de l&#39;état)</li><li>Écriture de données dans le smart contract (modification de l&#39;état)</li><li>Événements émis par le smart contract</li><li>Authentification des utilisateurs</li></ul><h2 id="choix-de-la-blockchain-et-du-smart-contract" tabindex="-1"><a class="header-anchor" href="#choix-de-la-blockchain-et-du-smart-contract"><span>Choix de la blockchain et du smart contract</span></a></h2><ul><li>Sélectionnez une blockchain appropriée pour votre application (par exemple Ethereum).</li><li>Développez ou utilisez un smart contract qui répond aux besoins de votre application.</li></ul><h2 id="conception-de-l-architecture-client-serveur" tabindex="-1"><a class="header-anchor" href="#conception-de-l-architecture-client-serveur"><span>Conception de l&#39;architecture client/serveur</span></a></h2><ul><li>Choisissez les technologies pour le client (frontend) et le serveur (backend).</li><li>Concevez une architecture qui permettra au client d&#39;interagir avec le serveur, qui agira comme une passerelle vers le smart contract.</li></ul><h2 id="mise-en-place-du-serveur-backend" tabindex="-1"><a class="header-anchor" href="#mise-en-place-du-serveur-backend"><span>Mise en place du serveur (backend)</span></a></h2><ul><li>Configurez un serveur backend en utilisant Node.js avec Express.js ou le framework de votre choix.</li><li>Implémentez les endpoints RESTful pour gérer les interactions avec le smart contract.</li><li>Intégrez un fournisseur de web3 (comme Web3.js pour Ethereum) pour communiquer avec la blockchain.</li></ul><h2 id="developpement-du-client-frontend" tabindex="-1"><a class="header-anchor" href="#developpement-du-client-frontend"><span>Développement du client (frontend)</span></a></h2><ul><li>Choisissez un framework frontend comme React, Angular ou Vue.js.</li><li>Créez les interfaces utilisateur nécessaires pour interagir avec le smart contract.</li><li>Intégrez des composants pour afficher les données lues à partir du smart contract et pour permettre aux utilisateurs d&#39;envoyer des transactions.</li></ul><h2 id="integration-avec-le-smart-contract" tabindex="-1"><a class="header-anchor" href="#integration-avec-le-smart-contract"><span>Intégration avec le smart contract</span></a></h2><ul><li>Utilisez les fonctions fournies par votre fournisseur de web3 pour appeler les méthodes du smart contract depuis le backend.</li><li>Implémentez des mécanismes pour gérer les autorisations et l&#39;authentification des utilisateurs lorsqu&#39;ils interagissent avec le smart contract.</li></ul><h2 id="tests" tabindex="-1"><a class="header-anchor" href="#tests"><span>Tests</span></a></h2><ul><li>Effectuez des tests unitaires pour chaque composant du frontend et du backend.</li><li>Réalisez des tests d&#39;intégration pour vérifier la communication entre le client, le serveur et le smart contract.</li></ul><h2 id="deploiement" tabindex="-1"><a class="header-anchor" href="#deploiement"><span>Déploiement</span></a></h2><ul><li>Déployez le serveur backend sur un service d&#39;hébergement comme Heroku, AWS ou Azure.</li><li>Déployez le client frontend sur un serveur HTTP en utilisant un service comme Netlify, Vercel ou GitHub Pages.</li></ul><h2 id="maintenance-et-ameliorations" tabindex="-1"><a class="header-anchor" href="#maintenance-et-ameliorations"><span>Maintenance et améliorations</span></a></h2><ul><li>Surveillez les performances et la sécurité de l&#39;application en production.</li><li>Corrigez les bugs et les problèmes signalés par les utilisateurs.</li><li>Ajoutez de nouvelles fonctionnalités en fonction des besoins des utilisateurs ou des évolutions du smart contract.</li></ul><div class="hint-container info"><p class="hint-container-title">Note:</p><p>Plus d&#39;information à venir</p></div>',24),l=[r];function c(o,s){return t(),n("div",null,l)}const p=e(a,[["render",c],["__file","project01.html.vue"]]),h=JSON.parse(`{"path":"/projects/project01.html","title":"Projet Blockchain","lang":"en-US","frontmatter":{"title":"Projet Blockchain","pageInfo":false,"order":1,"author":"Talent HUB Team","date":"2024-04-17T00:00:00.000Z","category":["Guide"],"tag":["Page config","Guide"],"sticky":true,"star":true,"copyright":false,"footer":"Talent HUB | Copyright © 2024","lastUpdated":false,"contributors":false,"description":"Créer une application client/serveur qui intéragit avec un smart contract déployé sur la blockchain. Le projet est disponible ICI Participants au projet Définition des exigences...","head":[["meta",{"property":"og:url","content":"https://docs.talenthub.dev/projects/project01.html"}],["meta",{"property":"og:title","content":"Projet Blockchain"}],["meta",{"property":"og:description","content":"Créer une application client/serveur qui intéragit avec un smart contract déployé sur la blockchain. Le projet est disponible ICI Participants au projet Définition des exigences..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-22T11:59:57.000Z"}],["meta",{"property":"article:author","content":"Talent HUB Team"}],["meta",{"property":"article:tag","content":"Page config"}],["meta",{"property":"article:tag","content":"Guide"}],["meta",{"property":"article:published_time","content":"2024-04-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-22T11:59:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Projet Blockchain\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-22T11:59:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Talent HUB Team\\"}]}"]]},"headers":[{"level":2,"title":"Créer une application client/serveur qui intéragit avec un smart contract déployé sur la blockchain.","slug":"creer-une-application-client-serveur-qui-interagit-avec-un-smart-contract-deploye-sur-la-blockchain","link":"#creer-une-application-client-serveur-qui-interagit-avec-un-smart-contract-deploye-sur-la-blockchain","children":[]},{"level":2,"title":"Participants au projet","slug":"participants-au-projet","link":"#participants-au-projet","children":[]},{"level":2,"title":"Définition des exigences fonctionnelles","slug":"definition-des-exigences-fonctionnelles","link":"#definition-des-exigences-fonctionnelles","children":[]},{"level":2,"title":"Choix de la blockchain et du smart contract","slug":"choix-de-la-blockchain-et-du-smart-contract","link":"#choix-de-la-blockchain-et-du-smart-contract","children":[]},{"level":2,"title":"Conception de l'architecture client/serveur","slug":"conception-de-l-architecture-client-serveur","link":"#conception-de-l-architecture-client-serveur","children":[]},{"level":2,"title":"Mise en place du serveur (backend)","slug":"mise-en-place-du-serveur-backend","link":"#mise-en-place-du-serveur-backend","children":[]},{"level":2,"title":"Développement du client (frontend)","slug":"developpement-du-client-frontend","link":"#developpement-du-client-frontend","children":[]},{"level":2,"title":"Intégration avec le smart contract","slug":"integration-avec-le-smart-contract","link":"#integration-avec-le-smart-contract","children":[]},{"level":2,"title":"Tests","slug":"tests","link":"#tests","children":[]},{"level":2,"title":"Déploiement","slug":"deploiement","link":"#deploiement","children":[]},{"level":2,"title":"Maintenance et améliorations","slug":"maintenance-et-ameliorations","link":"#maintenance-et-ameliorations","children":[]}],"git":{"createdTime":1713459536000,"updatedTime":1719057597000,"contributors":[{"name":"Lionel Leiva-Marcon","email":"llm@d-flow.fr","commits":5}]},"readingTime":{"minutes":1.64,"words":492},"filePathRelative":"projects/project01.md","localizedDate":"April 17, 2024","autoDesc":true}`);export{p as comp,h as data};
