import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as i,a as n}from"./app-R8Nik1jj.js";const r={},a=n('<h2 id="creer-une-application-client-serveur-utilisant-l-ia-pour-faire-du-text-to-speech" tabindex="-1"><a class="header-anchor" href="#creer-une-application-client-serveur-utilisant-l-ia-pour-faire-du-text-to-speech"><span>Créer une application client/serveur utilisant l&#39;IA pour faire du text to speech.</span></a></h2><h2 id="participants-au-projet" tabindex="-1"><a class="header-anchor" href="#participants-au-projet"><span>Participants au projet</span></a></h2><table><thead><tr><th>Identifiant</th><th>Nom</th></tr></thead><tbody><tr><td>TH078</td><td>Yeo Lôhognon Maïmouna</td></tr><tr><td>TH084</td><td>Aka Yao Jean Pierre-Joseph</td></tr><tr><td>TH046</td><td>SEKONGO GNINNINGAFOLO ISMAEL</td></tr><tr><td>TH069</td><td>Diarassouba Mamadou</td></tr><tr><td>TH053</td><td>WOLLE Arnaud Junior</td></tr></tbody></table><h2 id="definition-des-besoins-fonctionnels" tabindex="-1"><a class="header-anchor" href="#definition-des-besoins-fonctionnels"><span>Définition des besoins fonctionnels</span></a></h2><ul><li>Identifier les fonctionnalités nécessaires pour la conversion texte en discours : <ul><li>Saisie de texte par l&#39;utilisateur sur le client</li><li>Envoi du texte au serveur pour traitement par l&#39;IA</li><li>Utilisation d&#39;un modèle d&#39;IA pour convertir le texte en discours</li><li>Lecture du discours généré au client</li><li>Gestion des langues et des paramètres vocaux</li></ul></li></ul><h2 id="selection-des-technologies" tabindex="-1"><a class="header-anchor" href="#selection-des-technologies"><span>Sélection des technologies</span></a></h2><ul><li>Choix des technologies adaptées pour le frontend et le backend : <ul><li>Frontend : React, Angular, Vue.js, ou une autre bibliothèque/framework JavaScript</li><li>Backend : Node.js avec Express.js ou un autre framework/backend</li><li>Modèle d&#39;IA : TensorFlow.js, Hugging Face, Mozilla TTS, etc.</li></ul></li></ul><h2 id="conception-de-l-architecture-client-serveur" tabindex="-1"><a class="header-anchor" href="#conception-de-l-architecture-client-serveur"><span>Conception de l&#39;architecture client/serveur</span></a></h2><ul><li>Concevoir une architecture qui permettra au client d&#39;envoyer du texte au serveur pour la conversion en discours, et de recevoir le discours généré pour lecture.</li><li>Déterminer les endpoints de l&#39;API REST nécessaires pour la communication entre le client et le serveur.</li></ul><h2 id="mise-en-place-du-serveur-backend" tabindex="-1"><a class="header-anchor" href="#mise-en-place-du-serveur-backend"><span>Mise en place du serveur (backend)</span></a></h2><ul><li>Configuration d&#39;un serveur backend en utilisant Node.js avec Express.js ou le framework de votre choix.</li><li>Implémentation des endpoints de l&#39;API pour permettre au client d&#39;envoyer du texte et de recevoir le discours généré.</li><li>Intégration du modèle d&#39;IA choisi pour la conversion texte en discours.</li></ul><h2 id="developpement-du-client-frontend" tabindex="-1"><a class="header-anchor" href="#developpement-du-client-frontend"><span>Développement du client (frontend)</span></a></h2><ul><li>Création d&#39;une interface utilisateur permettant aux utilisateurs de saisir du texte.</li><li>Mise en place de la logique pour envoyer le texte au serveur et lire le discours généré.</li><li>Intégration de fonctionnalités de gestion des langues et des paramètres vocaux.</li></ul><h2 id="integration-avec-le-modele-d-ia" tabindex="-1"><a class="header-anchor" href="#integration-avec-le-modele-d-ia"><span>Intégration avec le modèle d&#39;IA</span></a></h2><ul><li>Utilisation des SDK ou API fournis par le modèle d&#39;IA pour convertir le texte en discours.</li><li>Gestion des réponses de l&#39;IA et lecture du discours généré au client.</li></ul><h2 id="tests" tabindex="-1"><a class="header-anchor" href="#tests"><span>Tests</span></a></h2><ul><li>Réalisation de tests unitaires pour chaque composant du frontend et du backend.</li><li>Effectuation de tests d&#39;intégration pour vérifier la communication entre le client et le serveur, ainsi que la conversion texte en discours par l&#39;IA.</li></ul><h2 id="deploiement" tabindex="-1"><a class="header-anchor" href="#deploiement"><span>Déploiement</span></a></h2><ul><li>Déploiement du serveur backend sur un service d&#39;hébergement tel que Heroku, AWS, ou Azure.</li><li>Déploiement du client frontend sur un serveur HTTP en utilisant un service comme Netlify, Vercel, ou GitHub Pages.</li></ul><h2 id="maintenance-et-ameliorations" tabindex="-1"><a class="header-anchor" href="#maintenance-et-ameliorations"><span>Maintenance et améliorations</span></a></h2><ul><li>Surveiller les performances et la fiabilité de l&#39;application en production.</li><li>Corriger les bugs et les problèmes rapportés par les utilisateurs.</li><li>Ajouter de nouvelles fonctionnalités, comme la prise en charge de nouvelles langues ou l&#39;amélioration de la qualité du discours généré par l&#39;IA.</li></ul><div class="hint-container info"><p class="hint-container-title">Note:</p><p>Plus d&#39;information à venir</p></div>',22),l=[a];function o(s,c){return t(),i("div",null,l)}const p=e(r,[["render",o],["__file","project03.html.vue"]]),h=JSON.parse(`{"path":"/projects/project03.html","title":"Projet 03","lang":"en-US","frontmatter":{"title":"Projet 03","pageInfo":false,"order":3,"author":"Talent HUB Team","date":"2024-04-17T00:00:00.000Z","category":["Guide"],"tag":["Page config","Guide"],"sticky":true,"star":true,"copyright":false,"footer":"Talent HUB | Copyright © 2024","lastUpdated":false,"contributors":false,"description":"Créer une application client/serveur utilisant l'IA pour faire du text to speech. Participants au projet Définition des besoins fonctionnels Identifier les fonctionnalités néces...","head":[["meta",{"property":"og:url","content":"https://docs.talenthub.dev/projects/project03.html"}],["meta",{"property":"og:title","content":"Projet 03"}],["meta",{"property":"og:description","content":"Créer une application client/serveur utilisant l'IA pour faire du text to speech. Participants au projet Définition des besoins fonctionnels Identifier les fonctionnalités néces..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-26T10:21:38.000Z"}],["meta",{"property":"article:author","content":"Talent HUB Team"}],["meta",{"property":"article:tag","content":"Page config"}],["meta",{"property":"article:tag","content":"Guide"}],["meta",{"property":"article:published_time","content":"2024-04-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-26T10:21:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Projet 03\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-26T10:21:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Talent HUB Team\\"}]}"]]},"headers":[{"level":2,"title":"Créer une application client/serveur utilisant l'IA pour faire du text to speech.","slug":"creer-une-application-client-serveur-utilisant-l-ia-pour-faire-du-text-to-speech","link":"#creer-une-application-client-serveur-utilisant-l-ia-pour-faire-du-text-to-speech","children":[]},{"level":2,"title":"Participants au projet","slug":"participants-au-projet","link":"#participants-au-projet","children":[]},{"level":2,"title":"Définition des besoins fonctionnels","slug":"definition-des-besoins-fonctionnels","link":"#definition-des-besoins-fonctionnels","children":[]},{"level":2,"title":"Sélection des technologies","slug":"selection-des-technologies","link":"#selection-des-technologies","children":[]},{"level":2,"title":"Conception de l'architecture client/serveur","slug":"conception-de-l-architecture-client-serveur","link":"#conception-de-l-architecture-client-serveur","children":[]},{"level":2,"title":"Mise en place du serveur (backend)","slug":"mise-en-place-du-serveur-backend","link":"#mise-en-place-du-serveur-backend","children":[]},{"level":2,"title":"Développement du client (frontend)","slug":"developpement-du-client-frontend","link":"#developpement-du-client-frontend","children":[]},{"level":2,"title":"Intégration avec le modèle d'IA","slug":"integration-avec-le-modele-d-ia","link":"#integration-avec-le-modele-d-ia","children":[]},{"level":2,"title":"Tests","slug":"tests","link":"#tests","children":[]},{"level":2,"title":"Déploiement","slug":"deploiement","link":"#deploiement","children":[]},{"level":2,"title":"Maintenance et améliorations","slug":"maintenance-et-ameliorations","link":"#maintenance-et-ameliorations","children":[]}],"git":{"createdTime":1713160929000,"updatedTime":1714126898000,"contributors":[{"name":"Lionel Leiva-Marcon","email":"llm@d-flow.fr","commits":8}]},"readingTime":{"minutes":1.77,"words":532},"filePathRelative":"projects/project03.md","localizedDate":"April 17, 2024","autoDesc":true}`);export{p as comp,h as data};
